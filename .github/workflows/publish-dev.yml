name: Publish Dev Build

on:
  push:
    branches: [ main ]

jobs:
  bump-version:
    name: Bump version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      version: ${{ steps.bump.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Bump patch version
        id: bump
        run: |
          # Read current version from workspace Cargo.toml
          CURRENT_VERSION=$(grep -m1 '^version = ' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "Current version: $CURRENT_VERSION"

          # Parse and increment patch version
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR="${VERSION_PARTS[0]}"
          MINOR="${VERSION_PARTS[1]}"
          PATCH="${VERSION_PARTS[2]}"
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"

          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

          # Update version in workspace Cargo.toml
          sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" Cargo.toml

          # Commit and push
          git add Cargo.toml
          git commit -m "chore: bump version to $NEW_VERSION [skip ci]"
          git push

  build-wheels:
    name: Build wheels on ${{ matrix.platform.os }}
    needs: bump-version
    runs-on: ${{ matrix.platform.runner }}
    permissions:
      id-token: write

    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            os: linux
          - runner: macos-13  # x86_64
            os: macos
          - runner: macos-14  # ARM64
            os: macos-arm
          - runner: windows-latest
            os: windows

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main  # Get the version bump commit
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: bindings-python
          command: build
          args: --release --out dist
          manylinux: ${{ matrix.platform.os == 'linux' && 'auto' || '' }}

      - name: Upload wheels to GitHub artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform.os }}
          path: bindings-python/dist

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: build-wheels
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          path: dist
          merge-multiple: true

      - name: Publish to TestPyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.TESTPYPI_API_TOKEN }}
          MATURIN_REPOSITORY: testpypi
